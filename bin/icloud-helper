#!/usr/bin/env bash
source "$DOTFILES/sources/strict.bash"

# =====================================
# Arguments

# help
function help() {
	cat <<-EOF >/dev/stderr
		USAGE:
		icloud-helper status
		# ^ get the current sync status of iCloud Drive

		icloud-helper evict -- <file>...
		# ^ evict a file or files from the local iCloud Drive, keeping the paths remotely.

		icloud-helper clean
		# ^ evict everything from the local iCloud Drive, keeping everything remotely.

		icloud-helper size
		# ^ get the size of the local iCloud Drive.
	EOF
	if test "$#" -ne 0; then
		echo-style $'\n' --error="ERROR:" $'\n' --red="$(echo-lines -- "$@")" >/dev/stderr
	fi
	return 22 # Invalid argument
}

# process
action=''
action_args=()
while test "$#" -ne 0; do
	item="$1"
	shift
	case "$item" in
	'help' | '--help' | '-h') help ;;
	'--action='*) action="${item:9}" ;;
	'--')
		action_args+=("$@")
		shift $#
		break
		;;
	'--'*) help "An unrecognised flag was provided: $item" ;;
	*)
		if test -z "$action"; then
			action="$item"
		else
			help "An unrecognised argument was provided: $item"
		fi
		;;
	esac
done

# if no action, exit with help
if test -z "$action"; then
	help
fi

# =====================================
# Actions

# clean
function act_clean() {
	find "$HOME/Library/Mobile Documents/com~apple~CloudDocs" -type f -exec icloud-helper evict -- {} \;
}

# evict
function act_evict() {
	for p in "$@"; do
		# .DS_Store files are not added to iCloud Drive
		# .icloud files are placeholders for non-local files
		# .screenflow does not play niceley with iCloud Drive, as it is a secret directory
		if test ! -d "$p" && [[ "$p" != *".DS_Store" && "$p" != *".icloud" ]]; then
			if [[ "$p" = *".screenflow"* || "$p" = *".sketch"* ]]; then
				echo "skipped $p, as it is a directory in disguise as a file, and can only evict files"
			else
				brctl evict "$p"
			fi
		else
			echo "skipped $p, as it is a directory or excluded path"
		fi
	done
}

# status
function act_status() {
	brctl status com.apple.CloudDocs
}

# size
function act_size() {
	get-size "$HOME/Library/Mobile Documents/com~apple~CloudDocs"
}

# =====================================
# Act

if test "$(type -t "act_$action")" = 'function'; then
	"act_$action" "${action_args[@]}"
	exit "$?"
else
	echo "Action [$action] not yet implemented." >/dev/stderr
	exit 78 # Function not implemented
fi
