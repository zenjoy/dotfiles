#!/usr/bin/env bash
source "$DOTFILES/sources/strict.bash"
source "$DOTFILES/sources/ripgrep.bash"

# notes
# use /dev/random as on macos /dev/zero is instant
# |& is because dd writes to something other than stdout

# vars
if is-mac; then
	bs="1m" # mac only
else
	bs="1M" # linux only
fi
megabytes_in_gigabyte=1024

# options
path="${1-}"
if test -z "$path" -o ! -d "$path"; then
	cat <<-EOF
		USAGE:
		fs-speed <directory>

		ABOUT:
		Performs a speed test of <directory>.
	EOF
	exit 1
fi

# prepare
scratchpad="$(fs-temp --directory="$path")"
log="$(mktemp)"
function finish() {
	silent rm -rf "$scratchpad" "$log"
}
trap finish EXIT

# start
echo-segment --h1="Speed Test: $path"
# write performance
echo-segment --h2="Write Performance"
echo-eval dd if=/dev/random of="$scratchpad" bs="$bs" count="$megabytes_in_gigabyte" |& tee "$log"
bytes="$(rg -o '(\d+) bytes/sec' --replace '$1' <"$log" || :)"
if test -n "$bytes"; then
	echo-style "Writes at " --bold="$((bytes / 1024 / 1024)) megabytes" " a second"
fi
echo-segment --g2="Write Performance"

# read performance
echo-segment --h2="Read Performance"
echo-eval dd if="$scratchpad" of=/dev/null bs="$bs" |& tee "$log"
bytes="$(rg -o '(\d+) bytes/sec' --replace '$1' <"$log" || :)"
if test -n "$bytes"; then
	echo-style "Reads at " --bold="$((bytes / 1024 / 1024)) megabytes" " a second"
fi
echo-segment --g2="Read Performance"

# done
echo-segment --g1="Speed Test: $path"
