#!/usr/bin/env bash
source "$DOTFILES/sources/strict.bash"
source "$(which eval-collapse)"

# =====================================
# Start

echo-segment --h1="Flush DNS"

# =====================================
# Acction

# https://support.apple.com/en-us/HT202516
if is-mac; then
	if command-exists mDNSResponder; then
		eval_collapse \
			--pending="$(echo-style --bold='Restarting [mDNSResponder]...')" \
			--success="$(echo-style --success='Restarted [mDNSResponder].')" \
			--failure="$(echo-style --error='Failed to restart [mDNSResponder].')" \
			-- sudo killall -HUP mDNSResponder
	fi
	if command-exists dscacheutil; then
		eval_collapse \
			--pending="$(echo-style --bold='Flushing [dscacheutil]...')" \
			--success="$(echo-style --success='Flushed [dscacheutil].')" \
			--failure="$(echo-style --error='Failed to flush [dscacheutil].')" \
			-- sudo dscacheutil -flushcache
	fi
	if command-exists discoveryutil; then
		eval_collapse \
			--pending="$(echo-style --bold='Flushing [discoveryutil]...')" \
			--success="$(echo-style --success='Flushed [discoveryutil].')" \
			--failure="$(echo-style --error='Failed to flush [discoveryutil].')" \
			-- sudo discoveryutil mdnsflushcache
	fi
elif command-exists systemd-resolve; then
	eval_collapse \
		--pending="$(echo-style --bold='Flushing DNS cache via [systemd-resolve]...')" \
		--success="$(echo-style --success='Flushed DNS cache via [systemd-resolve]')" \
		--failure="$(echo-style --error='Failed to flush DNS cache via [systemd-resolve].') $(echo-style --notice='If using an alternative DNS service, then this is expected.')" \
		-- systemd-resolve --flush-caches || :
else
	echo-style --error='DNS flushing not yet implemented for this operating system.' >/dev/stderr
	exit 19 # Operation not supported by device
fi

# =====================================
# Finish

echo-segment --g1="Flush DNS"
