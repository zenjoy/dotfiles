#!/usr/bin/env bash
source "$DOTFILES/sources/strict.bash"

# =====================================
# Checks

# check that an accident has not occured
if ! is-apt; then
	echo-style --notice="[$0] is for Linux systems with [apt] installed, skipping." >/dev/stderr
	exit 0
fi

# =====================================
# Start

echo-segment --h1='Setup APT'

# =====================================
# Configuration

source "$DOTFILES/sources/config.bash"

# setup.bash provides:
APT_INSTALL=()
APT_UNINSTALL=()
APT_ADD=()    # deprecated, use APT_INSTALL
APT_REMOVE=() # deprecated, use APT_UNINSTALL
load_dotfiles_config 'setup.bash'

# adjustments
mapfile -t APT_INSTALL < <(prepare_packages 'APT_INSTALL' -- "${APT_INSTALL[@]}" "${APT_ADD[@]}")

# =====================================
# Upgrade

# update references
sudo apt-get update -y

# upgrade packages
# `full-upgrade` is the same as `dist-upgrade` apparently, which is a more automatic/comprehensive upgrader compared to `apt-get upgrade`
sudo apt-get full-upgrade -y

# check for a new distro release
if do-release-upgrade -c; then
	# if there is one, then ask the user if they want to upgrade to it
	if confirm-negative --ppid=$$ -- 'Upgrade the distribtion release?'; then
		sudo do-release-upgrade
	fi
fi

# =====================================
# Packages

# helpers
function apt_uninstall_bulk() {
	echo-segment --h2="Uninstall $# apt packages"
	if test "$#" -ne 0; then
		sudo apt-get remove -y --purge "$@"
	fi
	echo-segment --g2="Uninstall $# apt packages"
}
function apt_install_bulk() {
	echo-segment --h2="Install $# apt packages"
	if test "$#" -ne 0; then
		env CONFIRM= NAME="apt:$*" APT="$*" setup-util apt
	fi
	echo-segment --g2="Install $# apt packages"
}

# apt uninstall
apt_uninstall_bulk "${APT_UNINSTALL[@]}" "${APT_REMOVE[@]}"

# apt install
apt_install_bulk "${APT_INSTALL[@]}"

# =====================================
# Finish

echo-segment --g1='Setup APT'
