#!/usr/bin/env bash
source "$DOTFILES/sources/strict.bash"

# help
function help {
	cat <<-EOF >/dev/stderr
		ABOUT:
		Trims empty lines at the start and end of the stdin or arguments.

		USAGE:
		echo-trim $'\n\na\n\nb\n\n'
		echo $'\n\na\n\nb\n\n' | echo-trim
		echo-trim  ''  $'\n'  'a'  ' '  $'\t'
	EOF
}

# instead of buffering everything, then filtering off the end
# we can instead have a queue/buffer of empty lines, then flush them when a non-empty line is found
# this allows data to be echoed as it is received
queue=()
started='no'
function act {
	if is-empty-string "$1"; then
		if test "$started" = 'yes'; then
			queue+=("$1")
		fi
	else
		started='yes'
		if test "${#queue[@]}" -ne 0; then
			for line in "${queue[@]}"; do
				echo "$line"
			done
			queue=()
		fi
		echo "$1"
	fi
}

source "$DOTFILES/sources/stdinargs.bash"
