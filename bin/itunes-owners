#!/usr/bin/env bash
# dependencies: ffmpeg, php, pv
source "$DOTFILES/sources/strict.bash"

# dependencies
env QUIET=yes setup-util-pv

song_list="$(mktemp)"
owner_list="$(mktemp)"
database="$HOME/Music/iTunes/iTunes Music Library.xml"

function decode {
	# url
	# node: node -e "process.stdout.write(decodeURI(require('fs').readFileSync(0, 'utf8')))"
	# perl: perl -pe 's/\%(\w\w)/chr hex $1/ge'
	# php -R 'echo urldecode($argn);'

	# html
	# recode: recode html..utf8
	# php: php -R 'echo html_entity_decode($argn);'

	# php
	# stdin: file_get_contents("php://stdin", "r")
	# args: $argn

	# shellcheck disable=SC2016
	php -R 'echo html_entity_decode(urldecode($argn));' <<<"$1"
}

echo-style --h2="Fetching music to [$song_list]..."
grep '<key>Location</key><string>file://' <"$database" | sed 's/.*<string>file:..//; s/<\/string>//' >"$song_list"
song_count="$(wc -l <"$song_list" | xargs)"
echo-style --g2="...fetched $song_count songs"

echo-style --h2="Fetching owners to [$owner_list]..."
while read -r line; do
	echo -n X # why? perhaps for pv?
	file="$(decode "$line")"
	# echo "analysing: $file"
	# if test -f "$file"; then
	# 	echo "missing: $file"
	# 	exit 1
	# fi
	owner="$(ffprobe -i "$file" |& grep 'account_id' | sed 's/.*account_id.*: //')"
	if test -n "$owner"; then
		# echo "found owner: $owner"
		printf '%s\t%s' "$owner" "$file" >>"$owner_list"
	fi
done <"$song_list" | pv -s "$song_count" - >/dev/null
# extract
owners="$(cut -f1 -s <"$owner_list" | sort | uniq)"
owners_count="$(echo "$owners" | wc -l | xargs)"
owned_count="$(wc -l <"$owner_list" | xargs)"
echo-style --g2="...found $owned_count owned media files, with $owners_count unique owners."

echo-style --h2="UNIQUE OWNERS:"
echo "$owners"
echo
echo-style --h2="OWNED MEDIA:"
sort <"$owner_list" | column -t -s $'\t'
echo
