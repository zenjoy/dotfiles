#!/usr/bin/env bash
source "$DOTFILES/sources/strict.bash"

# =====================================
# Checks

# check that an accident has not occured
if ! is-mac; then
	echo-style --notice="[$0] is only intended to be run on macOS systems, skipping." >/dev/stderr
	exit 0
fi

# =====================================
# Action

# log
echo-segment --h1='Clean macOS'

# Clean brew
setup-mac-brew --clean

# Remove updates that are not cleaned automatically
echo-segment --h2='Cleaning application update caches'
list=(
	"$HOME/Library/Application Support/Plex Media Server/Updates"
	"$HOME/Library/Application Support/Spotify/PersistentCache/Update"
)
rm -Rf "${list[@]}"
echo-segment --g2='Cleaned application update caches'

# Remove cache
echo-segment --h2='Cleaning caches'
# rm the removable caches
rm -Rf "$XDG_CACHE_HOME"
# recreate essential directories
list=(
	"$XDG_CACHE_HOME"
	# gems, @todo is this still necessary?
	"$XDG_CACHE_HOME/gems"
	# pip, @todo is this still necessary?
	"$XDG_CACHE_HOME/pip/http"
	"$HOME/Library/Caches/pip/http"
)
mkdir -p "${list[@]}"
echo-segment --g2='Cleaned caches'

# npm
if command-exists npm; then
	{
		echo-segment --h2='Cleaning npm caches'
		source "$DOTFILES/sources/nvm.sh"
		{
			# use `|| :`` as nvm is a function
			nvm use node || :
			npm cache clean --force || :
			nvm use system || :
			npm cache clean --force || :
			nvm use default || :
			npm cache clean --force || :
		} &>/dev/null
		echo-segment --g2='Cleaned npm caches'
	} || {
		echo-segment --e2='Cleaned npm caches'
	}
fi

# done
echo-segment --g1='Clean macOS'
