#!/usr/bin/env bash
source "$DOTFILES/sources/strict.bash"

# =====================================
# Start

echo-segment --h1='Setup Rust'

# =====================================
# Configuration

source "$DOTFILES/sources/config.bash"

# setup.bash provides:
CARGO_INSTALL=()
RUST_INSTALL=() # deprecated, use CARGO_INSTALL
load_dotfiles_config 'setup.bash'

# adjustments
mapfile -t CARGO_INSTALL < <(prepare_packages 'CARGO_INSTALL' -- "${CARGO_INSTALL[@]}" "${RUST_INSTALL[@]}")

# =====================================
# Install

# clean
if is-brew && test -n "$(brew-installed -- rustup rust || :)"; then
	if confirm-positive --ppid=$$ -- 'Rust is currently installed via homebrew. Confirm that you want Dorothy to use rustup to manage rust instead. Rustup is the official and only endorsed method of managing rust.'; then
		brew uninstall -f rustup rust
	fi
fi

# dependencies
echo-segment --h2="Install build dependencies"
setup-util-devel
echo-segment --g2="Install build dependencies"

# rustup
if command-exists rustup; then
	echo-segment --h2="Update rustup"
	eval-collapse -- rustup update
	echo-segment --g2="Update rustup"
else
	# https://rust-lang.github.io/rustup/installation/other.html
	echo-segment --h2="Install rustup"
	curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- --no-modify-path
	echo-segment --g2="Install rustup"
fi

# =====================================
# Packages

# install
function install_each_cargo_crate() {
	echo-segment --h2="Install $# rust crates"
	log-performance
	for line in "$@"; do
		env NAME="cargo:$line" CARGO="$line" setup-util cargo
	done
	echo-segment --g2="Install $# rust crates"
}
install_each_cargo_crate "${CARGO_INSTALL[@]}"

# =====================================
# Finish

echo-segment --g1='Setup Rust'
