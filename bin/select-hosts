#!/usr/bin/env bash
# shellcheck disable=SC2164,SC1091,SC2016
source "$DOTFILES/sources/strict.bash"
source "$DOTFILES/sources/arrays.bash"
requires_array_support 'mapfile'
source "$(which eval-collapse)"

# =====================================
# Start

echo-segment --h1="Setup Hosts file"

# =====================================
# Configuration

source "$DOTFILES/sources/config.bash"

# hosts.bash provides:
# OPTIONS=()
# CHOICE=''
# NOFAP='' # yes/no/maybe
load_dotfiles_config 'hosts.bash'

# reconfigure?
reconfigure='no'
if test "${1-}" = '--configure'; then
	reconfigure='yes'
	shift
fi

# adjustments
if test -z "$CHOICE" -o "$reconfigure" = 'yes'; then
	if test "${#OPTIONS[@]}" -eq 0; then
		echo-segment --error="Invalid configuration, there must be valid OPTIONS."
	fi
	CHOICE="$(
		choose-option \
			--question='Which host file do you wish to use?' \
			--label=first -- "${OPTIONS[@]}"
	)"
	# as this is a new selection, recalculate nofap compliance
	if contains-word "$CHOICE" 'porn'; then
		# if it has porn in it, then it means it blocks porn
		NOFAP='yes'
	else
		NOFAP='no'
	fi
fi
# else, it is a manual selection, so let the user determine NoFap compliance

# =====================================
# Action

# prepare
hosts_file='/etc/hosts'

# helper
function hosts {
	# prepare
	local url custom_file content_file combined_file
	url="$1"
	custom_file="$(mktemp)"
	content_file="$(mktemp)"
	combined_file="$(mktemp)"

	# prepare defaults in case of failures
	cat <<-EOF >"$custom_file"
		# <custom>
		# </custom>
	EOF
	cat <<-EOF >"$content_file"
		127.0.0.1 localhost

		# The following lines are desirable for IPv6 capable hosts
		::1 ip6-localhost ip6-loopback
		fe00::0 ip6-localnet
		ff00::0 ip6-mcastprefix
		ff02::1 ip6-allnodes
		ff02::2 ip6-allrouters
		ff02::3 ip6-allhosts
	EOF

	# grab the custom content, and save it temporarily
	sed -n '/<custom>/,/<\/custom>/p' <"$hosts_file" >"$custom_file"

	# download the new file to a temporary location
	down "$url" --destination="$content_file" || :

	# combine the parts
	cat "$custom_file" "$content_file" >"$combined_file"

	# ensure the hostname exists
	sed --null-data --in-place --regexp-extended \
		--expression="s#(\s+)localhost\n#\1localhost\n127.0.0.1\1$(get-hostname)\n#" \
		"$combined_file"

	# combine the custom content with the new content, and save it to the destination
	sudo mv -f "$combined_file" "$hosts_file"

	# fix permissions, otherwise `sudo systemctl status systemd-resolved` could fail with:
	# Failed to open /etc/hosts: Permission denied
	fs-own --permissions=644 --admin -- /etc/hosts
}

# apply
eval_collapse \
	--pending="$(echo-style --bold="Downloading [$CHOICE] to [$hosts_file]...")" \
	--success="$(echo-style --success="Downloaded [$CHOICE] to [$hosts_file].")" \
	-- hosts "$CHOICE"

# =====================================
# NoFap

source "$DOTFILES/sources/nofap.bash"
nofap "$NOFAP" 'hosts file' "$CHOICE"

# =====================================
# Reconfigure

# update configuration
update_dotfiles_user_config --prefer=local --no-template 'hosts.bash' -- \
	--field='NOFAP' --value="$NOFAP" \
	--field='CHOICE' --value="$CHOICE"

# =====================================
# Finish

echo-segment --g1="Setup Hosts file"

# finally, flush dns
flush-dns
